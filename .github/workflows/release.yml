# .github/workflows/release.yml
name: 'Create Release'

on:
  push:
    branches: main

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.check.outputs.should-release }}
    steps:
      - name: Check if commit message contains RELEASE
        id: check
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"RELEASE"* ]]; then
            echo "should-release=true" >> $GITHUB_OUTPUT
            echo "✅ RELEASE keyword found in commit message"
          else
            echo "should-release=false" >> $GITHUB_OUTPUT
            echo "[X] No RELEASE keyword found, skipping release"
          fi

  build-and-release:
    needs: check-release
    if: needs.check-release.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build NoSkid Project
        id: build
        uses: ./.github/actions/build-noskid
        with:
          node-version: '18'

      - name: Create release archive
        id: archive
        run: |
          BUILD_DIR="${{ steps.build.outputs.build-dir }}"
          COMMIT_HASH="${{ steps.build.outputs.commit-hash }}"
          ARCHIVE_NAME="noskid-release-${COMMIT_HASH}.zip"
          
          echo "[i] Creating archive from: $BUILD_DIR"
          echo "[i] Archive name: $ARCHIVE_NAME"
          
          cd "$BUILD_DIR" && zip -r "../../$ARCHIVE_NAME" . && cd ../..
          
          if [ ! -f "$ARCHIVE_NAME" ]; then
            echo "❌ Failed to create archive!"
            exit 1
          fi
          
          echo "✅ Archive created successfully: $ARCHIVE_NAME"
          echo "archive-name=$ARCHIVE_NAME" >> $GITHUB_OUTPUT
          echo "archive-path=$(pwd)/$ARCHIVE_NAME" >> $GITHUB_OUTPUT

      - name: Generate release info
        id: release-info
        run: |
          COMMIT_HASH="${{ steps.build.outputs.commit-hash }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
          COMMIT_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          cat > release_body.md << EOF
          ## 🚀 Release ${COMMIT_HASH}
          
          **Built from commit:** \`${COMMIT_HASH}\`  
          **Author:** @${COMMIT_AUTHOR}  
          **Date:** ${COMMIT_DATE}
          
          ### 📝 Commit Message
          \`\`\`
          ${COMMIT_MESSAGE}
          \`\`\`
          
          ### 📦 What's Included
          - Complete built website ready for deployment
          - All production assets optimized and bundled
          - Generated from the latest source code
          
          ### 🔧 Installation
          1. Download the \`noskid-release-${COMMIT_HASH}.zip\` file
          2. Extract the archive
          3. Update the api/config.php file with your settings
          4. Deploy the contents to your web server
          
          ---
          *This release was automatically generated from commit ${COMMIT_HASH}*
          EOF
          
          echo "release-tag=v${COMMIT_HASH}" >> $GITHUB_OUTPUT
          echo "release-name=NoSkid Release ${COMMIT_HASH}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release-info.outputs.release-tag }}
          name: ${{ steps.release-info.outputs.release-name }}
          body_path: release_body.md
          files: ${{ steps.archive.outputs.archive-path }}
          draft: false
          prerelease: false
          generate_release_notes: false

      - name: Release Summary
        run: |
          echo "## Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release Tag:** \`${{ steps.release-info.outputs.release-tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Release Name:** ${{ steps.release-info.outputs.release-name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Archive:** \`${{ steps.archive.outputs.archive-name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Build Directory:** \`${{ steps.build.outputs.build-dir }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**View Release:** https://github.com/${{ github.repository }}/releases/tag/${{ steps.release-info.outputs.release-tag }}" >> $GITHUB_STEP_SUMMARY